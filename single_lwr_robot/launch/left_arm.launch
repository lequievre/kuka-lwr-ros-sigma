<launch>
	<!-- LAUNCH INTERFACE FOR REAL ROBOT -->
	
	<!-- set the parameters for the real interface -->
	<!--	
			49938 = bras droit
			IP du bras droit : 192.168.100.253
			
			49939 = bras gauche
			IP du bras gauche : 192.168.100.254	
			
			IP du PC : 192.168.100.102
			Masque : 255.255.255.0
			
			IP de la tÃªte Robosoft : 192.168.100.252
			Port : 60000
			
			IP Shadow hand: automatique
	-->

        <arg name="fri_driver_file" default="$(find single_lwr_robot)/config/49939-FRI-Driver.init" />
	<arg name="robot_urdf_file" 	default="$(find single_lwr_robot)/robot/single_lwr_robot.urdf.xacro"/>
	<arg name="hw_interface_file"   default="$(find single_lwr_robot)/config/hw_interface.yaml"/>
	<arg name="controller_file" 	default="$(find single_lwr_robot)/config/controllers.yaml"/>
	
	<arg name="use_rviz" default="false"/>

	<arg name="robot_name" default="single_lwr_robot"/>

	<arg name="controllers" default="kuka_group_command_controller_fri kuka_gravity_compensation_controller kuka_one_task_inverse_kinematics cartesian_velocity_control" />

	<!-- load robotHW configurations to rosparam server -->
 	<rosparam file="$(arg hw_interface_file)" command="load"/>

	<!-- load all controller configurations to rosparam server -->
  	<rosparam file="$(arg controller_file)" command="load"/>

	<param name="robot_description" command="$(find xacro)/xacro.py $(arg robot_urdf_file)"/>

	<param name="lwr/robot_description" command="$(find xacro)/xacro.py '$(find single_lwr_robot)/robot/single_lwr_robot.urdf.xacro'" />
	
	<param name="fri_driver_file" type="str" value="$(arg fri_driver_file)"/>
	
	<group ns="lwr">
		<param name="robot_namespace" value="lwr"/>
		<node name="controller_spawner_joint" pkg="controller_manager" type="spawner" respawn="true" output="screen" args="joint_state_controller"/>
		<node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="true" output="screen" args="--stopped $(arg controllers)"/>
		<node name="lwr_hw_fril" pkg="lwr_hw" type="lwr_hw_fril_node" output="screen"/>
		<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
		<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" respawn="false" output="screen"/>
	</group>
	
	<group if="$(arg use_rviz)">
		<node name="kuka_lwr_rviz" pkg="rviz" type="rviz" respawn="false" args="-d $(find single_lwr_robot)/config/rviz_config.rviz" output="screen"/>
	</group>
	
</launch>
